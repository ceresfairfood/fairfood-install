# Configuration for all the things.

app_name: fairfood
app: "{{ app_name }}"

app_user: "fairfood"
app_user_home: "/srv/{{ app_user }}"

metabase_version: v0.39.3
metabase_user: "metabase"
metabase_user_home: "/home/{{ metabase_user }}"

app_root: "{{ app_user_home }}"
current_path: "{{ app_root }}/current"
config_path: "{{ current_path }}/config"
build_path: "{{ current_path }}"

log_path: "{{ current_path }}/log"
pid_path: "{{ current_path }}/tmp/pids"
sock_path: "{{ current_path }}/tmp/socks"

# During [prod switchover](README.md#switching-servers),
# domain will be manually updated in nginx config, and new certs generated.
# domain: "{{ inventory_hostname }}"
metabase_domain: "metabase.ceresfairfood.org.au"

https: false
rails_env: "staging"
background_jobs: "true" # whether to enable cron jobs (whenever) and delayed jobs
email_it: "ceresfairfood+it@openfoodnetwork.org.au"

#----------------------------------------------------------------------
# Database variables
db_user: "fairfood"
db_privileges: "ALL"
db_name: "fairfood_{{ rails_env }}"
# Created with something like:
#
#   RAILS_ENV=staging ./bin/rails db:create db:schema:load
#   mysqldump fairfood_production > files/fairfood_schema.sql
#
mysql_data_file: "fairfood_schema.sql"

# Metabase query database
metabase_db_user: "metabase"
metabase_db_privileges: "SELECT"
metabase_db_name: "fairfood_metabase"

#----------------------------------------------------------------------
# Puma variables
puma_config: "{{ config_path }}/puma.rb"
puma_log: "{{ log_path }}/puma.log"
puma_pid: "{{ pid_path }}/puma.pid"
puma_state: "{{ pid_path }}/puma.state"
puma_sock: "{{ sock_path }}/puma.{{ app }}.sock"
puma_workers: 2
puma_threads: 1 # start small and consider increasing to 3
rack_timeout: 140 # keep in sync with rack_timeout.rb

#----------------------------------------------------------------------
# Email variables
# A new DKIM key will be generated, but it can be replaced with an
# existing key by overwriting /etc/opendkim/keys/mail.private

dkim_admin_email: "{{ email_it }}"
dkim_selector: mail
dkim_domains:
  - "{{ domain }}"
  - "ceresfairfood.org.au"
dkim_same_key: true # generate one key for both domains

#----------------------------------------------------------------------
# nginx config
#
# Some `listen` params can only be applied once per port, so are applied in the default_servers.
# Use of `deferred` param delays handling a request until the client sent data.

nginx_sites_available:
  default:
    - |
      # Default port settings
      listen 80 deferred default_server;
      listen [::]:80 deferred;
      listen 443 ssl deferred default_server;
      listen [::]:443 ssl deferred default_server;

      # Defaults for any server_names not specified elsewhere
      # nginx requires a cert for ssl ports, even though we're not responding:
      include snippets/snakeoil.conf; # self-signed certificate

      access_log off;
      # nginx code to close the connection without sending any data:
      return 444;

  # Basic config for development environments only
  fairfood_http:
    - |
      listen 80 deferred;
      listen [::]:80 deferred;
      server_name {{ domain }};

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      add_header Strict-Transport-Security "max-age=31536000";

      root "{{ current_path }}/public";

      gzip on;
      gzip_disable "msie6";

      try_files $uri @rails;
      location @rails {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://rails;
        proxy_read_timeout {{ rack_timeout + 1 }};
      }

      location ~ ^/(assets)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

      error_page 500 502 503 504 /500.html;
      client_max_body_size 4G;
      keepalive_timeout 60;

  fairfood_http_to_https_redirect:
    - |
      listen 80;
      listen [::]:80;
      server_name {{ domain }};

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      #add_header Content-Security-Policy "default-src self";

      # For certbot automatic renewal
      location '/.well-known/acme-challenge' {
        default_type "text/plain";
        root /etc/letsencrypt/webrootauth;
      }

      location / {
        return 301 https://$server_name$request_uri;
      }

  fairfood_https:
    - |
      listen 443 ssl;
      listen [::]:443 ssl;
      server_name {{ domain }};
      root "{{ current_path }}/public";

      ssl_certificate      /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
      ssl_certificate_key  /etc/letsencrypt/live/{{ domain }}/privkey.pem;

      include /etc/letsencrypt/options-ssl-nginx.conf;
      ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      add_header Strict-Transport-Security "max-age=31536000";

      # Allow CORS with whitelisted domains
      add_header Access-Control-Allow-Origin $allow_origin; # See map allow_origin defined below
      add_header Vary Origin; # indicates that responses differ based on the value of the Origin request header.

      gzip on;
      gzip_disable "msie6";

      try_files $uri/index.html $uri @rails;

      # Block scanning for scripts efficiently.
      location ~ \.php$ {
        return 404;
      }

      # some clients look here before reading link rel="icon"
      location /favicon.ico {
        return 301 https://$server_name/favicon.png;
      }

      location @rails {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://rails;
        proxy_read_timeout {{ rack_timeout + 1 }};
      }

      location ~ ^/(assets)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

      error_page 500 502 503 504 /500.html;
      client_max_body_size 4G;
      keepalive_timeout 60;

  # Metabase
  metabase_http_to_https_redirect:
    - |
      listen 80;
      # listen [::]80; ## This doesn't work, I forget why
      server_name {{ metabase_domain }};

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      #add_header Content-Security-Policy "default-src self";

      location / {
        return 301 https://$server_name$request_uri;
      }
  metabase_https:
    - |
      listen 443;
      # listen [::]:443;
      server_name {{ metabase_domain }};

      ssl_certificate      /etc/letsencrypt/live/{{ metabase_domain }}/fullchain.pem;
      ssl_certificate_key  /etc/letsencrypt/live/{{ metabase_domain }}/privkey.pem;

      include /etc/letsencrypt/options-ssl-nginx.conf;
      ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      add_header Strict-Transport-Security "max-age=31536000";

      gzip on;
      gzip_disable "msie6";

      limit_req zone=overseas burst=70 delay=3;

      # Metabase
      location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:3000;
      }

      # Block scanning for scripts efficiently.
      location ~ \.php$ {
        return 404;
      }

      client_max_body_size 4G;
      keepalive_timeout 60;

  # Status (for collectd-wormly)
  nginx_status:
    - |
      listen 8081;

      location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
      }

nginx_events_params:
  - worker_connections 768

nginx_configs:
  upstream:
    - upstream rails { server unix:{{ puma_sock }}; }

  upgrade:
    - |
      # Whitelist for any subdomains and local dev
      map $http_origin $allow_origin {
        ~^https?://(.*\.)?ceresfairfood.org.au(:\d+)?$ $http_origin;
        ~^https?://(.*\.)?localhost(:\d+)?$ $http_origin;
        default "";
      }

  geoip:
    - geoip2 /var/lib/GeoIP/GeoLite2-Country.mmdb { $geoip2_data_country_iso_code country iso_code; }
    - map $geoip2_data_country_iso_code  $geo_outside_aus { default "outside"; AU ""; }
    - limit_req_zone $geo_outside_aus zone=overseas:10m rate=150r/m;
