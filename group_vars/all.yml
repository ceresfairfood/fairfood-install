app_name: fairfood
app: "{{ app_name }}"

app_user: "members.ceresfairfood.org.au"
app_user_home: "/srv/{{ app_user }}"

app_root: "{{ app_user_home }}"
current_path: "{{ app_root }}/current"
config_path: "{{ current_path }}/config"
build_path: "{{ current_path }}"

log_path: "{{ current_path }}/log"
pid_path: "{{ current_path }}/tmp/pids"
sock_path: "{{ current_path }}/tmp/socks"

rbenv:
  env: user
  version: v0.4.0
  ruby_version: 1.9.3-p551

#domain: "members.ceresfairfood.org.au"
domain: "localhost"

https: false
use_letsencrypt_bla: false

rails_env: "staging"

#----------------------------------------------------------------------
# Database variables
db_name: "fairfood_production"
mysql_data_file: "fairfood_2016-09-21-empty.sql"

#----------------------------------------------------------------------
# Unicorn variables
# User name for the unprivileged user which runs unicorn
unicorn_user: "{{ app_user }}"
unicorn_config: "{{ app_root }}/unicorn.rb"
unicorn_log: "{{ log_path }}/unicorn.log"
unicorn_pid: "{{ pid_path }}/unicorn.pid"
unicorn_sock: "{{ sock_path }}/unicorn.sock"
unicorn_workers: 2
unicorn_timeout: 60



#----------------------------------------------------------------------
# nginx config

nginx_sites_available:
  default:
    - |
      listen 80 default_server;
      listen [::]:80 default_server;
      server_name _;
      access_log off;
      # nginx code to close the connection without sending any data:
      return 444;

  fairfood_http:
    - |
      listen 80;
      listen [::]:80;
      server_name {{ domain }};

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      add_header Strict-Transport-Security "max-age=31536000";

      root "{{ current_path }}/public";

      gzip on;
      gzip_disable "msie6";

      try_files $uri @unicorn;
      location @unicorn {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://unicorn;
      }

      location ~ ^/(assets)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

      error_page 500 502 503 504 /500.html;
      client_max_body_size 4G;
      keepalive_timeout 60;

  fairfood_http_to_https_redirect:
    - |
      listen 80;
      listen [::]:80;
      server_name {{ domain }};

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      #add_header Content-Security-Policy "default-src self";

      location '/.well-known/acme-challenge' {
        default_type "text/plain";
        root /etc/letsencrypt/webrootauth;
      }

      location / {
        return 301 https://$server_name$request_uri;
      }

  fairfood_https:
    - |
      listen 443 ssl;
      listen [::]:443 ssl;
      server_name {{ domain }};
      root {{ app_root }}/public;

      ssl_certificate      /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
      ssl_certificate_key  /etc/letsencrypt/live/{{ domain }}/privkey.pem;

      add_header X-Content-Type-Options nosniff;
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options DENY;
      add_header Strict-Transport-Security "max-age=31536000";

      gzip on;
      gzip_disable "msie6";

      try_files $uri/index.html $uri @unicorn;
      location @unicorn {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://unicorn;
      }

      location ~ ^/(assets)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

      error_page 500 502 503 504 /500.html;
      client_max_body_size 4G;
      keepalive_timeout 60;

nginx_events_params:
  - worker_connections 768

nginx_configs:
  upstream:
    - upstream unicorn { server unix:{{ unicorn_sock }} fail_timeout=0; }
