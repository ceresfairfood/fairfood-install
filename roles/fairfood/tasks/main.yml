---
# Initialise the working directory

- name: Authorise each admin SSH key to access the app user for push deploys
  authorized_key:
    user: "{{ app_user }}"
    state: present
    key: "{{ lookup('file', item) }}"
  with_fileglob:
    - "files/admin-ssh-keys/*.pub"

- name: Create directory for Git repository
  file:
    path: "{{ build_path }}"
    state: directory

- name: Initialise empty Git repository
  command: git init
  args:
    chdir: "{{ build_path }}"
    creates: ".git"

# The given SHA-1 sum identifies the empty tree of a fresh repo.
# You can create it by `git hash-object -t tree /dev/null`.
- name: Detach head for push deployment
  replace:
    path: "{{ build_path }}/.git/HEAD"
    regexp: "^ref: refs/heads/master$"
    replace: "4b825dc642cb6eb9a060e54bf8d69288fbee4904"

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - "{{ config_path }}"
    - "{{ pid_path }}"
    - "{{ sock_path }}"

- name: Install configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0775
  with_items:
    - { src: "post-receive.j2", dest: "{{ build_path }}/.git/hooks/post-receive" }
    - { src: "database.yml.j2", dest: "{{ config_path }}/database.yml" }

- name: Configure Bundler
  shell:
    chdir: "{{ build_path }}"
    cmd: |
      bundle config set --local deployment "true"
      bundle config set --local path "$HOME/.gem"
      bundle config set --local without "development test code_quality"
      bundle config set --local suppress_install_using_messages "true"

- name: Final notes
  pause:
    seconds: 1
    prompt: |




        FINAL NOTES ************************************************************

         {{ inventory_hostname }} is now ready for deployments via `git push`.
         You can now go to your fairfood git repository and deploy:

             git push {{ app_user }}@{{ inventory_hostname }}:{{ current_path }}

        ************************************************************************

          Check output for DKIM keys to add to DNS.
          Alternatively copy an existing key to /etc/opendkim/keys/mail.private

        ************************************************************************
